@model QuestionPaperDataFirstApp.Models.Question

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Question</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.queId)

    <div class="form-group">
        @Html.LabelFor(model => model.question1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.question1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.question1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opt1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opt1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opt1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opt2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opt2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opt2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opt3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opt3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opt3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opt4, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opt4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opt4, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.paperId, "paperId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("paperId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.paperId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @Html.HiddenFor(model => model.paperId, new { Value = Convert.ToInt32(Session["paperId"]) })

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-secondary my-3" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Convert.ToInt32(Session["paperId"]) }, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
